"use client";

import { SignIn, SignUp, UserButton, useUser } from "@clerk/nextjs";
import { useState } from "react";

export default function Home() {
  const { user } = useUser();
  const [prompt, setPrompt] = useState("");
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [isGenerating, setIsGenerating] = useState(false);

  const handlePromptChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setPrompt(e.target.value);
  };

  const handleGenerateClick = async () => {
    setIsGenerating(true);
    // Call OpenRouter API to generate flashcards
    try {
      const response = await fetch('/api/generate-flashcards', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt }),
      });
      const data = await response.json();
      // Redirect to flashcards page with generated data
      // For example: router.push(`/flashcards?data=${JSON.stringify(data)}`);
    } catch (error) {
      console.error("Error generating flashcards:", error);
    } finally {
      setIsGenerating(false);
    }
  };

  const handleThemeToggle = () => {
    setIsDarkMode(!isDarkMode);
  };

  return (
    <div className={isDarkMode ? "dark" : ""}>
      <header className="flex justify-between items-center p-4">
        <div>
          {user ? (
            <a href="/saved-items">View Saved Items</a>
          ) : (
            <div>
              <SignIn />
              <SignUp />
            </div>
          )}
        </div>
        <button onClick={handleThemeToggle}>
          {isDarkMode ? (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="w-6 h-6">
              <path d="M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 16.343a.75.75 0 00-1.061-1.06l-1.591 1.59a..."/>
            </svg>
          ) : (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -2 -20 -20" fill="currentColor" className="w-6 h-6">
              <path d="M9 .5c-.8-.8-.8-2 .2-2 .8-.8 .8-.8 .8-.8s-.3 .3-.3 .3c-.6 .6-.6 .6-.6 .6s-.3 .3-.3 .3c-.7 .7-.7 .7-.7 .7s-.3 .3-.3 .3c-.9 .9-.9 .9-.9 .9s-.3 .3-.3 .3c-1 .9 -1 .9 -1 .9s-.3 .3-.3 .3c-2 -.2 -2 -.2 -2 -.2s-.3 .3 -.3 .3c-4 -.4 -4 -.4 -4 -.4s-.4 -.4 -.4 -.4c1 -.9 -1 -2 -2 -2s-2 -2 -2 -2s-.4 -.4 -.4 -.4c0 -5 -5 -5 -5 -5s0 -.4 -.4 -.4c-1 -.9 -1 -.9 -1 -.9s-.4 -.4 -.4 -.4c0 -5 -5 -5 -5 -5s0 -.4 -.4 -.4c-2 -.8 -2 -.8 -2 -.8s-.8 .8 -.8 .8c-7 .7 -7 .7 -7 .7s0 ...."/>
            </svg>
          )}
        </button>
      </header>

      <main className="flex flex-col items-center justify-center h-[calc(100vh-4rem)]">
        <h1 className="text-4xl font-bold mb-2">AI Flashcards Generator</h1>
        <p className="text-lg mb-6">Enter a prompt to generate flashcards using AI.</p>
        <div className="flex items-center mb-6">
          <input
            type="text"
            placeholder="Enter a prompt"
            value={prompt}
            onChange={handlePromptChange}
            className="border rounded-l px-4 py-2 focus:outline-none focus:ring focus:border-blue-500"
          />
          <button
            onClick={handleGenerateClick}
            className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-r"
          >
            {isGenerating ? "Generating..." : "Generate"}
          </button>
        </div>
      </main>
    </div>
   );
}